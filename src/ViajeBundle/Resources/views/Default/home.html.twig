{% extends 'template.html.twig' %}
{% block body %}
<section id="home">
	<div id="headerwrap">
	    <div class="container">
			<div class="row">
				<div class="col-lg-6 col-lg-offset-3" id="titleprincipal">
					<h4>VIAJE CON NOSOTRO</h4>
					<h1>DE FORMA SEGURA</h1>
					
				</div>
			</div><! --/row -->
	    </div> <!-- /container -->
	</div><! --/headerwrap -->

	<div id="headerwrap2" >
	    <div class="container">
			<div class="row ">
				
			</div><! --/row -->
	    </div> <!-- /container -->
	</div><! --/headerwrap -->
	</section>
	<section id="works"></section>

	<div class="container">
		<div class="row centered mt mb">
			<h1 id="title1">Seleccione su Ruta de Circuito</h1>
	<input type="hidden" id="direccion" name="direccion" placeholder="Escribe para autocompletar..."/> 

   <div id="map_calculation_result_container">
                        <div id="lineLength"></div>
                        <div id="polyArea"></div>
                    </div>
	<div id="map_canvas" class="map_canvas" style="margin-top:22px;width:100%;height:600px;box-shadow: 0px 1px 2px 0px rgba(185,184,184,0.75);"></div>
	<input type="hidden" name="direccion2" id="direccion2">

		</div>
	</div>
	<div class="container">
		<div class="row centered mt mb">
			<h1 id="title2">Seleccione su Vehiculo de Preferencia</h1>
				

				<div class="marcacarro">
				{% for carro in carros %}
					<div class="col-lg-3 col-md-3 col-sm-3 gallery ">
						<img src="{{ asset(carro.ruta) }}" class="img-responsive" onclick="evento({{carro.id}})">
					</div>			
			 {% endfor %}
				</div>

<div id="datos"></div>
				<div id="resultado"></div>
				<div id="modelo"></div>


		</div><! --/row -->
	</div><! --/container -->


	<div class="container">
		<div class="row centered mt mb">
			<h1 id="title3">Seleccione su Hotel de Preferencia</h1>
			
			<!--<div class="col-lg-4 col-md-4 col-sm-4 gallery">
				<a href="work.html"><img src="assets/img/portfolio/folio01.png" class="img-responsive"></a>
			</div>
			<div class="col-lg-4 col-md-4 col-sm-4 gallery">
				<a href="work.html"><img src="assets/img/portfolio/folio02.png" class="img-responsive"></a>
			</div>
			<div class="col-lg-4 col-md-4 col-sm-4 gallery">
				<a href="work.html"><img src="assets/img/portfolio/folio03.png" class="img-responsive"></a>
			</div>
			<div class="col-lg-4 col-md-4 col-sm-4 gallery">
				<a href="work.html"><img src="assets/img/portfolio/folio04.png" class="img-responsive"></a>
			</div>
			<div class="col-lg-4 col-md-4 col-sm-4 gallery">
				<a href="work.html"><img src="assets/img/portfolio/folio05.png" class="img-responsive"></a>
			</div>
			<div class="col-lg-4 col-md-4 col-sm-4 gallery">
				<a href="work.html"><img src="assets/img/portfolio/folio06.png" class="img-responsive"></a>
			</div>-->


		</div><! --/row -->
	</div><! --/container -->
	
	<div id="social">
		<div class="container">
			<div class="row centered">
				<div class="col-lg-2">
					<a href="#"><i class="fa fa-dribbble"></i></a>
				</div>
				<div class="col-lg-2">
					<a href="#"><i class="fa fa-facebook"></i></a>
				</div>
				<div class="col-lg-2">
					<a href="#"><i class="fa fa-twitter"></i></a>
				</div>
				<div class="col-lg-2">
					<a href="#"><i class="fa fa-linkedin"></i></a>
				</div>
				<div class="col-lg-2">
					<a href="#"><i class="fa fa-instagram"></i></a>
				</div>
				<div class="col-lg-2">
					<a href="#"><i class="fa fa-tumblr"></i></a>
				</div>
			
			</div><! --/row -->
		</div><! --/container -->
	</div><! --/social -->


{% endblock %}

  
{% block javascripts %}
<script>
var lat = 48.1260811;
var lng = 4.133081;
var map = null;
var geocoder = null;
var marker = null;
//48.1260811,4.133081
var map = null;
var default_lat = 48.1260811;
var default_lng = 4.133081;
var default_zoom = 7;
var map_div = "map_canvas";
var measure;
var length_mode = "distance";

  jQuery(document).ready(function(){


 
     //lng = document.getElementsByName("milongitud")[0].value;
     //lat = document.getElementsByName("milatitud")[0].value;
     //obtenemos los valores en caso de tenerlos en un formulario ya guardado en la base de datos
     //lat = jQuery('#lat').val();
     //lng = jQuery('#long').val();
     //Asignamos al evento click del boton la funcion codeAddress
    
     //Inicializamos la función de google maps una vez el DOM este cargado
    initialize();
    // Create the search box and link it to the UI element.
        var input = document.getElementById('direccion');
        var searchBox = new google.maps.places.SearchBox(input);
        //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
 searchBox.addListener('places_changed', function() {
     codeAddress();
            
 //document.getElementsByName("ubicacion")[0].value = document.getElementById("direccion").value;      
      return false;
 });
      
});

  var beaches = [
        ['España', 40.46366700000001, -3.7492200000000366],
        ['Portugal', 39.39987199999999, -8.224454000000037],
        ['Andorra', 42.506285, 1.5218009999999822],
        ['Francia', 46.227638, 2.213749000000007],
        ['Alemania', 51.165691, 10.451526000000058],
        ['Austria', 47.516231, 14.550072],
        ['Dinamarca', 56.26392, 9.50178500000004],
        ['Beneluxlaan, Utrecht, Países Bajos', 52.0727659, 5.098581400000057],
        ['Finlandia', 61.92410999999999, 25.748151099999973],
        ['Gran Bretaña, Reino Unido', 53.7190281, -2.0727838999999904],
        ['Italia', 41.87194, 12.567379999999957],
        ['Noruega', 60.47202399999999, 8.46894599999996],
        ['Suiza', 46.818188, 8.227511999999933],
        ['Albania', 41.153332, 20.168330999999966],
        ['Belgica', 50.503887, 4.4699359999999615]

      ];
//   Bélgica, Bielorrusia, Bosnia y Herzegovina, Bulgaria, Chequia, Chipre, Ciudad del Vaticano, Croacia,  Eslovaquia, Eslovenia,  Estonia,  Grecia, Hungría, Irlanda, Islandia,  Letonia, Liechtenstein, Lituania, Luxemburgo, Macedonia, Malta, Moldavia, Mónaco, Montenegro,   , Polonia,  Reino Unido, Rumania, Rusia, San Marino, Serbia, Suecia,  Turquía, Ucrania. 
   
    function initialize() {
      
      //alert();
     
measure = {
        mvcLine: new google.maps.MVCArray(),
        mvcPolygon: new google.maps.MVCArray(),
        mvcMarkers: new google.maps.MVCArray(),
        line: null,
        polygon: null
    };

      geocoder = new google.maps.Geocoder();
        
       //Si hay valores creamos un objeto Latlng
       if(lat !='' && lng != '')
      {
         var latLng = new google.maps.LatLng(lat,lng);
      }
      else
      {
        //Si no creamos el objeto con una latitud cualquiera como la de Mar del Plata, Argentina por ej
         var latLng = new google.maps.LatLng(4.133081,48.1260811);
//40.4381311,-3.819622,11
      }
      //Definimos algunas opciones del mapa a crear
       var myOptions = {
          center: latLng,//centro del mapa
          zoom: 5,//zoom del mapa
          mapTypeId: google.maps.MapTypeId.ROADMAP //tipo de mapa, carretera, híbrido,etc
        };
        //creamos el mapa con las opciones anteriores y le pasamos el elemento div
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
         
        //creamos el marcador en el mapa
        marker = new google.maps.Marker({
            map: map,//el mapa creado en el paso anterior
            position: latLng,//objeto con latitud y longitud
            draggable: false, //que el marcador se pueda arrastrar
            //icon: "{{ asset('/ico/indice.png') }}"
        });
        
        setMarkers(map);


       //función que actualiza los input del formulario con las nuevas latitudes
       //Estos campos suelen ser hidden
 
/*var infoWindow = new google.maps.InfoWindow({map: map});
        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            updatePosition(pos);
            infoWindow.setPosition(pos);
            infoWindow.setContent('Location found.');
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
          updatePosition(latLng);
        }*/
       
         
 var input = document.getElementById('direccion');
        var searchBox = new google.maps.places.SearchBox(input);
       // map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
 searchBox.addListener('places_changed', function() {
     codeAddress();
            
 //document.getElementsByName("ubicacion")[0].value = document.getElementById("direccion").value;      
      return false;
 });

         
    }
    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Ayuda: Mueve el marcador para reubicar' :
                              'Error: Your browser doesn\'t support geolocation.');
      }
     
    //funcion que traduce la direccion en coordenadas
    function codeAddress() {
         
        //obtengo la direccion del formulario
        //var address = document.getElementById("direccion").value;
        var address = document.getElementById("direccion2").value;
        //hago la llamada al geodecoder
        geocoder.geocode( { 'address': address}, function(results, status) {
         
        //si el estado de la llamado es OK
        if (status == google.maps.GeocoderStatus.OK) {
            //centro el mapa en las coordenadas obtenidas
            map.setCenter(results[0].geometry.location);
            //coloco el marcador en dichas coordenadas
            marker.setPosition(results[0].geometry.location);
            //actualizo el formulario      
            updatePosition(results[0].geometry.location);
            
            //alert(results[0].geometry.location);


            placeMarker(results[0].geometry.location);
            //Añado un listener para cuando el markador se termine de arrastrar
            //actualize el formulario con las nuevas coordenadas
            google.maps.event.addListener(marker, 'dragend', function(){
                updatePosition(marker.getPosition());
            });
      } else {
          //si no es OK devuelvo error
          alert("No podemos encontrar la direcci&oacute;n, error: " + status);
      }
    });
  }
   
  //funcion que simplemente actualiza los campos del formulario
  function updatePosition(latLng)
  {
       
       //jQuery('#lat').val(latLng.lat());
       //jQuery('#long').val(latLng.lng());
          //document.getElementsByName("milongitud")[0].value = latLng.lat();
     //document.getElementsByName("milatitud")[0].value = latLng.lng();
   
  }

  function placeMarker(latLng) {
     //alert(latLng);
    var marker = new google.maps.Marker({map: map, position: latLng, draggable: false});
    measure.mvcLine.push(latLng);
    measure.mvcPolygon.push(latLng);
    measure.mvcMarkers.push(marker);
    var latLngIndex = measure.mvcLine.getLength() - 1;
    google.maps.event.addListener(marker, "drag", function(evt) {
        measure.mvcLine.setAt(latLngIndex, evt.latLng);
        measure.mvcPolygon.setAt(latLngIndex, evt.latLng);
    });
    google.maps.event.addListener(marker, "dragend", function() {
        if (measure.mvcLine.getLength() >= 0 ) {
            compute_length();
        }
    });

    display_polygon_line();
}


function display_polygon_line() {

//alert("lineas");
    if (measure.mvcLine.getLength() >= 1) {
        if (!measure.line) {
            measure.line = new google.maps.Polyline({
                map: map,
                clickable: false,
                strokeColor: "#FF0000",
                strokeOpacity: 1,
                strokeWeight: 3,
                path: measure.mvcLine
            });
        }

        if (measure.mvcPolygon.getLength() >= 1) {

            if (measure.polygon != null)
            {
                measure.polygon.setMap(null);
            }

            if (length_mode != "distance")
            {
                measure.polygon = new google.maps.Polygon({
                    clickable: false,
                    map: map,
                    fillOpacity: 0.25,
                    strokeOpacity: 0,
                    paths: measure.mvcPolygon
                });
            }
            else
            {
                measure.polygon = new google.maps.Polygon({
                    clickable: false,
                    map: map,
                    fillOpacity: 0.0,
                    strokeOpacity: 0,
                    paths: measure.mvcPolygon
                });
            }
        }
    }
    if (measure.mvcLine.getLength() >= 1) {
        compute_length();
    }
}


function compute_length() {
  //alert("compute");
    var length = 0;
    if (measure.mvcPolygon.getLength() > 1) {
        length = google.maps.geometry.spherical.computeLength(measure.line.getPath());
    }
    var area = 0;
    if (measure.mvcPolygon.getLength() > 2) {
        area = google.maps.geometry.spherical.computeArea(measure.polygon.getPath());
    }
//    lM = document.forms["mb"].elements["mode"][0].checked;

   //alert(length);
        var km = length / 1000;
        var feet = length * 3.2808399;
        var yards = length * 1.0936133;
        var miles = length * 0.000621371192;
        var unit = " metros";
        var unit1 = " millas";
        var unit2 = " Kilometros";
        var unit3 = " pies";
        var unit4 = " yardas";
        document.getElementById('lineLength').innerHTML = "<strong>Distancia total:</strong><br />" + length.toFixed(0) + unit + "<br />" + km.toFixed(3) + unit2
                + "<br />" + feet.toFixed(0) + unit3 + "<br />" + yards.toFixed(0) + unit4 + "<br />" + miles.toFixed(3) + unit1;
        document.getElementById('polyArea').innerHTML = '';

    

}


function evento(id){
	//alert(id);
	 var valor = id;
                            var data = {id: valor};

                           if(valor != '')
                                {
                                    
                                    $.ajax
                                        ({
                                            type: 'POST',
                                            url: "{{ path('buscar_modelo') }}",
                                            data: data,
                                            dataType: 'json',
                                             beforeSend: function(){
                                                //imagen de carga
                                                $(".marcacarro").hide();
                                            $("#resultado").html("<p align='center'><img src='{{ asset('images/loader.gif')}}'></p>");
                                            },
                                             error: function(){
                                                alert("error petición ajax");
                                                $("#datos").hide();
                                            },
                                            success: function(data)
                                            {   
                                            	
                                                $("#datos").show();
                                                $("#resultado").empty();
                                                $("#datos").empty();
												$("#datos").append("<a  onclick='select()'>Seleccionar Otra Marca</a>");
                                                for (var i=0, total = data.length; i < total; i++) {

                                                	var rutaimagen = data[i]["ruta"];

                              $("#resultado").append("<div class='col-lg-4 col-md-4 col-sm-4 gallery'>  <input type='radio' name='modelonombre' value='"+data[i]["descripcion"]+"' > <img src='"+rutaimagen+"' class='img-responsive'><p> <b>MODELO: </b>"+data[i]["modelonombre"]+"</p><p>"+data[i]["descripcion"]+"</p></div>");

                                               //alert(data[i]["ruta"]);
                                            }
                                            }
                                        });
                                }else{
                                    alert("valor no aplica");
                                }
                                    
                   
	}


	function select(){
		$("#resultado").empty();
		$("#datos").empty();
		$(".marcacarro").show();

	}

	 function setMarkers(map) {
        // Adds markers to the map.

        // Marker sizes are expressed as a Size of X,Y where the origin of the image
        // (0,0) is located in the top left of the image.

        // Origins, anchor positions and coordinates of the marker increase in the X
        // direction to the right and in the Y direction down.
        var image = {
          url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
          // This marker is 20 pixels wide by 32 pixels high.
          size: new google.maps.Size(20, 32),
          // The origin for this image is (0, 0).
          origin: new google.maps.Point(0, 0),
          // The anchor for this image is the base of the flagpole at (0, 32).
          anchor: new google.maps.Point(0, 32)
        };
        // Shapes define the clickable region of the icon. The type defines an HTML
        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
        // The final coordinate closes the poly by connecting to the first coordinate.
        var shape = {
          coords: [1, 1, 1, 20, 18, 20, 18, 1],
          type: 'poly'
        };
              var infowindow = new google.maps.InfoWindow();
        for (var i = 0; i < beaches.length; i++) {
          var beach = beaches[i];
          var marker = new google.maps.Marker({
            position: {lat: beach[1], lng: beach[2]},
            map: map,
            //icon: image,
            //shape: shape,

            title: beach[0],
            zIndex: beach[3]
          });

         /* marker.addListener('click', function() {
    map.setZoom(8);
    map.setCenter(marker.getPosition());
  });*/

        google.maps.event.addListener(marker, 'click', (function(marker, i) {
          return function() {
            infowindow.setContent("<h1>"+beaches[i][0]+"</h1>");
            infowindow.open(map, marker);
            //alert(beaches[i][0]);
             //document.getElementById('').innerHTML= "hola";
              jQuery('#direccion2').val(beaches[i][0]);
            codeAddress();
              //placeMarker("("+beaches[i][1]+","+beaches[i][2]+")");
          }
        })(marker, i));



        }

       
      }

 </script>
}

<!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaznzv0sICn4A8bWY0AmH_muSuYfxp3iw&libraries=places" 
  type="text/javascript" async defer></script>-->
  <script  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDuZZ1ZHMB8j0bXsWxy5wSPEcyW2WUvfIA&callback=initialize&libraries=places"
        async defer></script>
        <script src="https://maps.google.com/maps/api/js?sensor=false&language=en&libraries=geometry"></script>

{% endblock %}
